name: ci

on:
  push:
    branches:    
      - main
      - 'releases/**'
  workflow_dispatch:
  
jobs:
  build:
      name: Build and Test
      timeout-minutes: 15
      runs-on: ubuntu-latest
      # To use Remote Caching, uncomment the next lines and follow the steps below.
      # env:
      #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      #  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
 
      steps:
        - name: Release
          uses: google-github-actions/release-please-action@v3
          id: release
          with:
            command: manifest
            monorepo-tags: true
            token: ${{secrets.GITHUB_TOKEN}}
            default-branch: main
            
        - name: Check out code
          uses: actions/checkout@v3
          with:
            fetch-depth: 2
 
        - uses: pnpm/action-setup@v2.2.4
          with:
            version: 8
 
        - name: Setup Node.js environment
          uses: actions/setup-node@v3
          with:
            node-version: 18
            cache: 'pnpm'
            registry-url: 'https://registry.npmjs.org'

        - name: Install bun
          uses: oven-sh/setup-bun@v1
 
        - name: Install dependencies
          run: pnpm install --prefer-offline

        - uses: dtinth/setup-github-actions-caching-for-turbo@v1
          with:
           # Set the prefix for the cache keys.
            cache-prefix: kubb_
          
        - name: Build
          run: bun run build --concurrency=1

        - name: Typecheck
          run: bun run typecheck --concurrency=1

        - name: Test
          run: bun run test:coverage

        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v3
          if: ${{ steps.release.outputs.releases_created }}
          env:
             CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

        - name: Release
          continue-on-error: true
          if: ${{ success() && github.ref == 'refs/heads/main' && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          run: bun run release

        - name: Release canary
          continue-on-error: true
          if: ${{ success() && github.ref == 'refs/heads/main' && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          run: |
            npm --no-git-tag-version version minor
            npm --no-git-tag-version version $(npm pkg get version | sed 's/"//g')-canary.$(date +'%Y%m%dT%H%M%S')
            bun run release:canary
